"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOnConflictReturningFields = exports.getOnConflictFields = void 0;
/** @internal */
function getOnConflictFields(data, uniqueFields, options) {
    if (options.onConflictMergeFields) {
        return options.onConflictMergeFields;
    }
    const keys = Object.keys(data).filter(f => !uniqueFields.includes(f));
    if (options.onConflictExcludeFields) {
        return keys.filter(f => !options.onConflictExcludeFields.includes(f));
    }
    return keys;
}
exports.getOnConflictFields = getOnConflictFields;
/** @internal */
function getOnConflictReturningFields(meta, data, uniqueFields, options) {
    if (!meta) {
        return '*';
    }
    const keys = meta.comparableProps.filter(p => !p.lazy && !p.embeddable && !uniqueFields.includes(p.name)).map(p => p.name);
    if (options.onConflictAction === 'ignore') {
        return keys;
    }
    if (options.onConflictMergeFields) {
        return keys.filter(key => !options.onConflictMergeFields.includes(key));
    }
    if (options.onConflictExcludeFields) {
        return [...new Set(keys.concat(...options.onConflictExcludeFields))];
    }
    return keys.filter(key => !(key in data));
}
exports.getOnConflictReturningFields = getOnConflictReturningFields;
